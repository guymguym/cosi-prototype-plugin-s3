#
# TODO still WIP
#
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cosi-global-config
data:
  COSI_GRPC_LISTEN: "localhost:8080"
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: cosi-s3-plugin-secret
#stringData:
#  AWS_ACCESS_KEY_ID: ""
#  AWS_SECRET_ACCESS_KEY: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cosi-s3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: cosi-s3
  template:
    metadata:
      labels:
        name: cosi-s3
    spec:
      serviceAccountName: cosi-prototype-driver
      containers:
        ############################################
        # Sidecar Container (driver)
        # This runs encapsulated k8s controller code
        # to translate k8s APIs into GRPC methods
        - name: cosi-prototype-driver
          image: jcoperh/cosi
          imagePullPolicy: Never
          args:
            - "--zap-devel"
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "cosi-prototype-driver"
          envFrom:
            - configMapRef:
                name: cosi-global-config
        ############################################
        #  Plugin Container
        #  This container runs a GRPC server and translates
        #  rpcs into S3 operations.
        - name: cosi-s3-plugin
          image: jcoperh/plugin
          imagePullPolicy: Never
          args:
            - "-alsologtostderr"
          env:
            - name: AWS_REGION
              value: "us-east-1"
            # For use when creating a secret directly from a local $HOME/.aws/credentials file.
            # Uncomment this env var and the volumes & volumeMounts stanzas to mounth the secret.
#            - name: AWS_SHARED_CREDENTIALS_FILE
#              value: "/aws/.config/credentials"
          envFrom:
            - configMapRef:
                name: cosi-global-config
            - secretRef:
                name: cosi-s3-plugin-secret
#          volumeMounts:
#            - mountPath: "/aws/.config/credentials"
#              name: creds
#      volumes:
#        - name: creds
#          secret:
#            secretName: cosi-s3-plugin-secret
#            optional: false
